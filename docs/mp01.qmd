---
title: "Exploring the Most Popular Programming on Netflix"
format:
  html:
    theme: flatly   # overrides Darkly just for this page
    toc: false       # adds table of contents if you want
---

```{r}
#| code-fold: true
#| message: false
#| warning: false

library(readr)
library(dplyr)
library(DT)
library(stringr)
library(htmltools)
library(lubridate)
library(ggplot2)
library(tidyverse)

# Make sure data/mp01 folder exists
if(!dir.exists(file.path("data", "mp01"))){
  dir.create(file.path("data", "mp01"), showWarnings = FALSE, recursive = TRUE)
}

# Define paths to the data files you downloaded
# (so you can refer to them by variable name, not hard-coded strings)
GLOBAL_TOP_10_FILENAME  <- file.path("data", "mp01", "global_top10_alltime.csv")
COUNTRY_TOP_10_FILENAME <- file.path("data", "mp01", "country_top10_alltime.csv")

# Read the GLOBAL Top 10 tsv file into R as a tibble
#    (read_tsv will auto-parse types like dates/numbers)
# -------------------------------
GLOBAL_TOP_10 <- read_tsv(GLOBAL_TOP_10_FILENAME)

# Quick structure checks for GLOBAL data
#    - str(): base R structure (types + preview)
#    - glimpse(): dplyr-friendly, compact column summary
str(GLOBAL_TOP_10)
glimpse(GLOBAL_TOP_10)

# Data cleaning (GLOBAL): convert literal "N/A" strings
#    in season_title into real NA values (character type)
GLOBAL_TOP_10 <- GLOBAL_TOP_10 |>
  mutate(
    season_title = if_else(
      season_title == "N/A",
      NA_character_,
      season_title
    )
  )

# Confirm the fix took effect (season_title now shows NA, not "N/A")
glimpse(GLOBAL_TOP_10)

# Read the COUNTRY Top 10 file
#    (This file typically has ranks by country/week and no per-country hours)
COUNTRY_TOP_10 <- read_tsv(COUNTRY_TOP_10_FILENAME)

# Structure check for COUNTRY data
str(COUNTRY_TOP_10)
glimpse(COUNTRY_TOP_10)

# Data cleaning (COUNTRY): same "N/A" → NA fix on season_title
#   (Alternative: read_tsv(..., na = "N/A") to convert at import)
COUNTRY_TOP_10 <- COUNTRY_TOP_10 |>
  mutate(
    season_title = if_else(
      season_title == "N/A",
      NA_character_,
      season_title
    )
  )


# Load DT to build interactive HTML tables for quick EDA
#     (great for small, curated previews)
library(DT)

# Confirm the COUNTRY fix
glimpse(COUNTRY_TOP_10)

# Simple preview table: first 20 GLOBAL rows, minimal chrome
#   - searching/info disabled to look cleaner in a report
GLOBAL_TOP_10 |>
  head(n = 20) |>
  datatable(options = list(searching = FALSE, info = FALSE))


# Define a helper to prettify column names for display:
#     - underscores → spaces, then Title Case

library(stringr)
format_titles <- function(df) {
  colnames(df) <- colnames(df) |>
    str_replace_all("_", " ") |>
    str_to_title()
  df
}


# Preview with pretty headers, first 20 rows
#     - formatRound() adds commas/decimals for numeric readability
#       (use digits = 0 if you don’t want .00)

GLOBAL_TOP_10 |>
  format_titles() |>
  head(n = 20) |>
  datatable(options = list(searching = FALSE, info = FALSE)) |>
  formatRound(c("Weekly Hours Viewed", "Weekly Views"))

# Same preview but drop season_title since films often have NA there

GLOBAL_TOP_10 |>
  select(-season_title) |>
  format_titles() |>
  head(n = 20) |>
  datatable(options = list(searching = FALSE, info = FALSE)) |>
  formatRound(c("Weekly Hours Viewed", "Weekly Views"))

# Add a runtime-in-minutes column for readability,
#     then drop the original 'runtime' (hours) and season_title

GLOBAL_TOP_10 |>
  mutate(`runtime_(minutes)` = round(60 * runtime)) |>
  select(
    -season_title,
    -runtime
  ) |>
  format_titles() |>
  head(n = 20) |>
  datatable(options = list(searching = FALSE, info = FALSE)) |>
  formatRound(c("Weekly Hours Viewed", "Weekly Views"))

# Keep only the first 20 rows for a quick preview.
# Display those rows in an interactive DT table:
#  - searching = FALSE → hide the search bar.
#   - info = FALSE → hide the "Showing 1 to 20 of XXX entries" message.
COUNTRY_TOP_10 |> 
  head(n = 20) |>
  datatable(options = list(searching = FALSE, info = FALSE))

# Drop the season_title column (usually contains N/A for films).
# Apply the format_titles() helper function:
#  - replaces underscores in column names with spaces.
#  - converts names to Title Case (e.g. "country_name" → "Country Name").
# Keep only the first 20 rows for a manageable preview.
COUNTRY_TOP_10 |> 
  select(-season_title) |>
  format_titles() |>
  head(n = 20) |>
  datatable(options = list(searching = FALSE, info = FALSE))

```

---

```{r}
#| code-fold: true
#| message: false
#| warning: false
#| 
# Count distinct countries
n_countries <- COUNTRY_TOP_10 |>
  distinct(country_name) |>
  nrow()
```

## Q1: How many countries does Netflix operate in?

Netflix currently operates in **`r n_countries`** countries.

### Show all country names as a publication-quality table
```{r}
#| code-fold: true
#| message: false
#| warning: false
COUNTRY_TOP_10 |>
  distinct(country_name, country_iso2) |>
  arrange(country_name) |>
  datatable(
    options = list(pageLength = 10, searching = FALSE, info = FALSE),
    caption = htmltools::tags$caption(
      style = "caption-side: top; text-align: left;",
      "List of countries represented in Netflix Top 10 data"
    )
  )
```

---

```{r}
#| code-fold: true
#| message: false
#| warning: false
# Compute once and reuse
top_non_english_film <- GLOBAL_TOP_10 |>
  filter(category == "Films (Non-English)") |>
  group_by(show_title) |>
  summarise(max_weeks = max(cumulative_weeks_in_top_10, na.rm = TRUE), .groups = "drop") |>
  arrange(desc(max_weeks)) |>
  slice(1)

# Pretty datatable object
top_non_english_film_dt <- top_non_english_film |>
  rename(`Title` = show_title, `Max weeks in Top 10` = max_weeks) |>
  datatable(
    rownames = FALSE,
    options = list(dom = "t", paging = FALSE),
    caption = htmltools::tags$caption(
      style = "caption-side: top; text-align: left;",
      "Top Non-English Film by Weeks in Netflix Top 10"
    )
  ) |>
  formatStyle("Max weeks in Top 10", `text-align` = "right")
```

## Q2: Which non-English-language film has spent the most cumulative weeks in the global top 10?

**`r top_non_english_film_dt`**

```{r}
#| code-fold: true
#| message: false
#| warning: false
longest_film <- GLOBAL_TOP_10 |>
  filter(grepl("Films", category)) |>        # keep only films (English + Non-English)
  mutate(runtime_minutes = round(runtime * 60)) |>  # convert hours → minutes
  group_by(show_title) |>
  summarise(max_runtime = max(runtime_minutes, na.rm = TRUE), .groups = "drop") |>
  arrange(desc(max_runtime)) |>
  slice(1) |>
  pull(show_title)

longest_film_runtime <- GLOBAL_TOP_10 |>
  filter(grepl("Films", category)) |>        # keep only films (English + Non-English)
  mutate(runtime_minutes = round(runtime * 60)) |>  # convert hours → minutes
  group_by(show_title) |>
  summarise(max_runtime = max(runtime_minutes, na.rm = TRUE), .groups = "drop") |>
  arrange(desc(max_runtime)) |>
  slice(1) |>
  pull(max_runtime) 
```

## Q3: What is the longest film (English or non-English) to have ever appeared in the Netflix global Top 10? How long is it in minutes?

**`r longest_film`** is the longest film (English or non-English) to have ever appeared in the Netflix global Top 10. It is **`r longest_film_runtime`** minutes.

### Top 5 longest films
```{r}
#| code-fold: true
#| message: false
#| warning: false
GLOBAL_TOP_10 |>
  filter(grepl("Films", category)) |>
  mutate(runtime_minutes = round(runtime * 60)) |>
  group_by(show_title) |>
  summarise(max_runtime = max(runtime_minutes, na.rm = TRUE)) |>
  arrange(desc(max_runtime)) |>
  slice(1:5) |>
  DT::datatable(
    options = list(pageLength = 5, searching = FALSE, info = FALSE),
    caption = htmltools::tags$caption(
      style = "caption-side: top; text-align: left;",
      "Top 5 Longest Films in Netflix Global Top 10"
    )
  )
```


## Q4: For each of the four categories, what program has the most total hours of global viewership?
```{r}
#| code-fold: true
#| message: false
#| warning: false
top_shows_by_category <- GLOBAL_TOP_10 |>
  group_by(category, show_title) |>
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = "drop_last") |>
  slice_max(total_hours, n = 1, with_ties = FALSE) |>
  ungroup() |>
  arrange(desc(total_hours))

datatable(
  top_shows_by_category |>
    rename(`Category` = category,
           `Title` = show_title,
           `Total Hours Viewed` = total_hours),
  rownames = FALSE,
  options = list(dom = "t", paging = FALSE),
  caption = htmltools::tags$caption(
    style = "caption-side: top; text-align: left;",
    "Top Netflix Shows by Category (Total Hours Viewed)"
  )
)
```

---

```{r}
#| code-fold: true
#| message: false
#| warning: false
longest_tv_run <- COUNTRY_TOP_10 |>
  filter(category == "TV") |>                                    # only TV shows
  group_by(country_name, show_title) |>                          # group by show & country
  summarise(longest_run = max(cumulative_weeks_in_top_10, na.rm = TRUE)) |>
  ungroup() |>
  arrange(desc(longest_run)) |>
  slice(1)                                                       # keep only top row

# Extract values into separate objects
longest_country <- longest_tv_run$country_name
longest_show    <- longest_tv_run$show_title
longest_weeks   <- longest_tv_run$longest_run
```

## Q5: Which TV show had the longest run in a country’s Top 10? How long was this run and in what country did it occur?

**`r longest_show`** had the longest run as a TV show in **`r longest_country`** for **`r longest_weeks`** weeks.


## Q6: Netflix provides over 200 weeks of service history for all but one country in our data set. Which country is this and when did Netflix cease operations in that country?
```{r}
#| code-fold: true
#| message: false
#| warning: false
country_summary <- COUNTRY_TOP_10 |>
  group_by(country_name) |>
  summarise(
    total_weeks = n_distinct(week),
    last_week   = max(week),
    .groups = "drop"
  ) |>
  filter(total_weeks < 200)

datatable(
  country_summary |>
    rename(
      `Country` = country_name,
      `Total Weeks in Top 10` = total_weeks,
      `Most Recent Week` = last_week
    ),
  rownames = FALSE,
  options = list(pageLength = 10, searching = FALSE, info = FALSE),
  caption = htmltools::tags$caption(
    style = "caption-side: top; text-align: left;",
    "Countries with < 200 Total Weeks in Netflix Top 10"
  )
)
```

---

```{r}
#| code-fold: true
#| message: false
#| warning: false
squid_game_total <- GLOBAL_TOP_10 |>
  filter(
    grepl("Squid Game", show_title, ignore.case = TRUE),
    category %in% c("TV (Non-English)", "TV (English)")
  ) |>
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE)) |>
  pull(total_hours)

# Print without scientific notation
options(scipen = 999)   # turn off scientific notation globally
```

## Q7: What is the total viewership of the TV show Squid Game?
**`r squid_game_total`** is the total viewership of the TV show Squid Game.

## Q8: The movie Red Notice has a runtime of 1 hour and 58 minutes. Approximately how many views did it receive in 2021? 
```{r}
#| code-fold: true
#| message: false
#| warning: false
runtime_hours <- 118 / 60  
red_notice_views <- GLOBAL_TOP_10 |>
  filter(show_title == "Red Notice", year(week) == 2021) |>   # pick 2021 only
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE)) |>
  mutate(approx_views = round(total_hours / runtime_hours))

datatable(
  red_notice_views |>
    rename(
      `Total Hours Viewed` = total_hours,
      `Approx. Views` = approx_views
    ),
  rownames = FALSE,
  options = list(dom = "t", paging = FALSE),
  caption = htmltools::tags$caption(
    style = "caption-side: top; text-align: left;",
    "Red Notice Views Estimate (2021)"
  )
)
```

### Weekly look of Red Notice's Views
```{r}
#| code-fold: true
#| message: false
#| warning: false
runtime_hours <- 118 / 60  
red_notice_weekly <- GLOBAL_TOP_10 |>
  filter(show_title == "Red Notice", year(week) == 2021) |>
  mutate(approx_views = weekly_hours_viewed / runtime_hours)

datatable(
  red_notice_weekly |>
    select(week, weekly_rank, weekly_hours_viewed) |>
    rename(
      `Week` = week,
      `Weekly Rank` = weekly_rank,
      `Weekly Hours Viewed` = weekly_hours_viewed
    ),
  rownames = FALSE,
  options = list(pageLength = 7, searching = FALSE, info = FALSE),
  caption = htmltools::tags$caption(
    style = "caption-side: top; text-align: left;",
    "Red Notice Weekly Hours Viewed (2021)"
  )
) |>
  formatCurrency("Weekly Hours Viewed", currency = "", interval = 3, mark = ",")
```

### Line plot of weekly hours viewed

```{r}
#| code-fold: true
#| message: false
#| warning: false
ggplot(red_notice_weekly, aes(x = week, y = weekly_hours_viewed)) +
  geom_line(color = "steelblue", linewidth = 1.2) +
  geom_point(color = "darkred", size = 2) +
  scale_y_continuous(labels = scales::comma) +
  labs(
    title = "Weekly Viewing Hours of *Red Notice* in 2021",
    x = "Week",
    y = "Weekly Hours Viewed",
    caption = "Source: Netflix Top 10 dataset"
  ) +
  theme_minimal(base_size = 13)
```

--- 

```{r}
#| code-fold: true
#| message: false
#| warning: false
films_us_rank <- COUNTRY_TOP_10 |>
  filter(category == "Films", country_name == "United States") |>
  group_by(show_title) |>
  summarise(
    debut_rank = min(weekly_rank, na.rm = TRUE),          # first appearance rank
    ever_number1 = any(weekly_rank == 1, na.rm = TRUE),   # TRUE if it ever hit #1
    most_recent_week = max(week, na.rm = TRUE)            # last time it appeared
  ) |>
  ungroup() |>
  filter(ever_number1, debut_rank != 1)                   # must have hit #1, but not on debut

# Count of such films
num_films <- nrow(films_us_rank)

# Most recent film to pull this off
recent_film <- films_us_rank |>
  arrange(desc(most_recent_week)) |>
  slice(1)
```

## Q9: How many Films reached Number 1 in the US but did not originally debut there? That is, find films that first appeared on the Top 10 chart at, e.g., Number 4 but then became more popular and eventually hit Number 1? What is the most recent film to pull this off?

**No film** reached number 1 in the US if its original debut rank wasn’t number 1. There is **no film** that pulled this off.

## Q10: Which TV show/season hit the top 10 in the most countries in its debut week? In how many countries did it chart?

**Emily in Paris: Season 2**  hit the top 10 in 94 countries in its debut week.

```{r}
#| code-fold: true
#| message: false
#| warning: false
tv_debut_countries <- COUNTRY_TOP_10 |>
  filter(category == "TV") |>
  group_by(show_title, season_title, country_name) |>
  summarise(first_week = min(week), .groups = "drop") |>     # debut week per country
  group_by(show_title, season_title, first_week) |>
  summarise(num_countries = n_distinct(country_name), .groups = "drop") |>
  arrange(desc(num_countries))

# top 5
tv_debut_countries |>
  slice(1:5) |>
  datatable(
    options = list(pageLength = 5, searching = FALSE, info = FALSE),
    caption = htmltools::tags$caption(
      style = "caption-side: top; text-align: left;",
      "Top 5 TV Shows/Seasons by Number of Countries in Debut Week"
    )
  )
```



**FOR IMMEDIATE RELEASE**  
**NEW YORK, NY —** *`r format(Sys.Date(), "%B %d, %Y")`*

# Stranger Things Prepares for an Epic Finale After Record-Breaking Global Run

**Nonstop global phenomenon sets the stage for Season 5 at the end of 2025**

**NEW YORK, NY** – Netflix will close out a cultural phenomenon at the end of 2025 with the fifth and final season of *Stranger Things*. Across its first four seasons, the series has been viewed for an extraordinary **2.97 billion hours globally**, sustaining momentum in the **Top 10 for 19 weeks** and captivating audiences in **93 countries** worldwide.

---

## Highlights

- **2.97 billion hours** viewed across Seasons 1–4 (global total).  
- **Top 10 for 19 weeks** globally, underscoring long-tail engagement.  
- **Charted in 93 countries**, demonstrating unmatched international reach.  
- Outperforms recent English-language hits: **Wednesday (2.88B hours)** and **Bridgerton (2.28B hours)** in total hours viewed.  

---

“As we approach the final chapter, *Stranger Things* continues to prove that emotionally resonant, genre-defining storytelling can unite fans around the world,” said **Emre Ozbalta, CCO**. “Season 5 is the culmination of a journey audiences have embraced for years.”

With anticipation building for its final chapter, *Stranger Things* stands as one of the most-watched and most internationally celebrated series in Netflix history.

---

**MEDIA RELEASE**  
**MUMBAI, India —** *`r format(Sys.Date(), "%B %d, %Y")`*

# Netflix Surges in India with Over 180 Million Hours of Hindi-Language Hits

**Local originals dominate Top 10 charts and fuel long-term subscriber growth**

**MUMBAI, India** – Netflix continues to strengthen its foothold in the world’s most populous nation, with Hindi-language content driving **183 million hours of viewing** across films and television.  

Recent standouts include:  
- *The Railway Men – The Untold Story of Bhopal 1984*  
- *Khakee: The Bihar Chapter*  
- *The Great Indian Kapil Show*  

Together, these programs have dominated India’s Top 10 charts for **hundreds of weeks combined**, cementing Netflix’s reputation as a premier destination for regional storytelling.  

Other audience favorites like *Maamla Legal Hai* and *Haseen Dillruba* further highlight how **investment in regional originals is paying off**. While many of these titles did not chart in the United States, they demonstrate Netflix’s ability to deliver **locally resonant stories that capture massive audiences**.  

“With Hindi-language engagement at this scale, Netflix is not only entertaining millions of households in India but also laying the foundation for long-term subscriber growth in one of the most competitive streaming markets globally,” said **Emre Ozbalta, Chief Content Officer at Netflix**.  

Netflix’s expanding portfolio of Hindi-language hits underscores its commitment to both **cultural authenticity** and **global scale**, strengthening its position in the Indian market and beyond.

---


**FOR IMMEDIATE RELEASE**  
**LOS GATOS, Calif. —** *`r format(Sys.Date(), "%B %d, %Y")`*

# Non-English Films Power Netflix to 14.96 Billion Viewing Hours Globally

**From *Society of the Snow* to *Under Paris*, Netflix’s international film slate is rewriting streaming records across markets**

**LOS GATOS, Calif.** – Netflix today announced a landmark milestone: non-English films have now amassed **14.96 billion hours of global viewership** across its Top 10 catalog. This achievement underscores the power of local stories to connect with worldwide audiences.  

## Among the Top Performers
- *Society of the Snow* — **235.9 million hours**  
- *Under Paris* — **190.1 million hours**  
- *All Quiet on the Western Front* — **176.5 million hours**  
- *Troll* — **175.1 million hours**  
- *Exterritorial* — **168.8 million hours**  

Collectively, these films represent the strongest showing yet for Netflix’s non-English library. With charting presence in more than **90 countries**, non-English content now rivals the reach of major English-language hits.  

“Stories don’t need translation to travel,” said **Emre Ozbalta, EVP of Analytics**. “Our global audiences are embracing cinema from every corner of the world — and we’re doubling down on that in 2025 with even more ambitious local productions.”  

As Netflix continues to invest in regional and international films, this surge in non-English viewing positions the platform to capture expanding audiences in **Asia, Latin America, Europe, and beyond**.  